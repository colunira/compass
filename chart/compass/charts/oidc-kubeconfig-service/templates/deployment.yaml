apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oidc-kubeconfig-service.fullname" . }}
  labels:
{{ include "oidc-kubeconfig-service.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "oidc-kubeconfig-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "oidc-kubeconfig-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{ if .Values.global.isLocalEnv }}
      hostAliases:
        - ip: {{ .Values.global.minikubeIP }}
          hostnames:
            - "dex.{{ .Values.global.ingress.domainName }}"
      {{ end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "oidc-kubeconfig-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
            - name: SERVICE_PORT
              value: {{ .Values.config.servicePort | quote }}
            - name: GRAPHQL_URL
              value: {{ .Values.config.graphqlURL | quote }}
            - name: OIDC_KUBECONFIG_ISSUER_URL
              value: {{ .Values.config.oidc.issuer | quote }}
            - name: OIDC_KUBECONFIG_CLIENT_ID
              value: {{ .Values.config.oidc.client | quote }}
            - name: OIDC_KUBECONFIG_CLIENT_SECRET
              value: {{ .Values.config.oidc.secret | quote }}
          command:
            - sh
            - -c
            {{ if .Values.global.environment.gardener }}
            - /app/main -oidc-issuer-url=https://dex.{{ .Values.global.ingress.domainName }} -oidc-client-id=compass-ui
            {{ else }}
            - /app/main -oidc-issuer-url=https://dex.{{ .Values.global.ingress.domainName }} -oidc-client-id=compass-ui -oidc-ca-file=/etc/dex-tls-cert/tls.crt
          {{ end  }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.config.servicePort }}
              protocol: TCP
            - name: health
              containerPort: {{ .Values.config.healthPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/ready
              port: health
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health/ready
              port: health
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if not .Values.global.environment.gardener }}
          volumeMounts:
            - name: dex-tls-cert
              mountPath: /etc/dex-tls-cert/
      volumes:
        - name: dex-tls-cert
          secret:
            secretName: ingress-tls-cert
      {{ end -}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
